import {Habitat} from "../libraries/habitat-import.js"
Habitat.install(window)
const global = window

// Auto-generated by some MotherTode
(() => {

			const global = window
			const scope = {}
			const term = Term.export(Term.subTerms(Term.chain(Term.term('WithoutComments', scope), Term.maybe(Term.many(Term.regExp(/[^]/)))), [
['WithoutComments', Term.maybe(Term.many(Term.or([
		Term.emit(Term.list([Term.string(`//`), Term.maybe(Term.many(Term.regExp(/[^]/)))]), ""),
		Term.regExp(/[^]/)
	])))],
['Constant', Term.subTerms(Term.or([Term.term('Constant.UInt', scope), Term.term('Constant.SInt', scope), Term.term('Constant.Binary', scope), Term.term('Constant.Hex', scope)]), [
['UInt', Term.check(Term.list([Term.regExp(/[1-9]/), Term.maybe(Term.many(Term.regExp(/[0-9]/)))]), (n) => n < 2**96-1)],
['SInt', Term.check(Term.list([Term.or([Term.string(`+`), Term.string(`-`)]), Term.regExp(/[1-9]/), Term.maybe(Term.many(Term.regExp(/[0-9]/)))]), (n) => n > -(2**95) && n < 2**95-1)],
['Binary', Term.list([Term.string(`0b`), Term.many(Term.or([Term.string(`0`), Term.string(`1`)]))])],
['Hex', Term.list([Term.string(`0x`), Term.many(Term.regExp(/[0-9a-f]/))])]
])],
['Register', Term.subTerms(Term.or([Term.term('Register.Random', scope), Term.term('Register.Numbered', scope)]), [
['Random', Term.string(`R?`)],
['Numbered', Term.list([Term.string(`R`), Term.or([Term.regExp(/[0-9]/), Term.list([Term.string(`1`), Term.regExp(/[0-4]/)])])])]
])]
]), global, "EWATode")
			for (const key in term) {
				scope[key] = term[key]
			}
			return term
		
})()